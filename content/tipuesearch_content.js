var tipuesearch = {"pages": [{'title': '關於', 'text': '倉庫： https  :  //github.com/mdecourse/cmstemplate \n GitHub頁面： https  :  //mde.tw/cmstemplate \n 利用 cmstemplate 建立以 CMSiMDE 作為子模組的動態與靜態網站方法為: \n \n 登入 Github 帳號 \n 將瀏覽器指向  https://github.com/mdecourse/cmstemplate \n 利用  Use this template  按鈕建立倉儲 \n \n clone 帶有 CMSiMDE 的指令: \n git clone --recurse-submodules URL \n 上述 URL 即為希望將倉儲資料取下進行改版的 Github 倉儲網路統一資源位置, 也就是 Github 倉儲網址. \n 每一個以 cmstemplate 為 template 的倉儲, 其根目錄都帶有: \n \n init.py  - 其中的 site_title, ip 與 port 可以讓使用者自行修改, site_title 是網站標題, ip 為動態網站啟動時所使用的網路位址, 可設為內部或外部 IPv4 (IPv6), port 則是動態網站啟動時所佔用的埠號. \n http-server.py  - 執行後會使用內建的 localhost 與 port 8444 伺服 content 子目錄中的 CMSiMDE 靜態網頁. \n cms.bat  - 讓使用者執行動態網站用的批次檔案. \n acp.bat  - 若使用者已經將倉儲設為 ssh 連線, 且提供遠端與近端的認證模式, 則可以在執行此批次指令之後加上提交字串, 即可執行 git add ., git commit -m "提交訊息", 以及 git push 等三個指令 \n \n', 'tags': '', 'url': '關於.html'}, {'title': '筆記', 'text': '', 'tags': '', 'url': '筆記.html'}, {'title': '9443', 'text': '先打指令\xa0 c d tmp \n 再打  cd wcm2021 \xa0 (自己的名稱) \n 然後打  cms \xa0 (更新後設置在wcm2021所以直接打cms) \n 就會得到網址\xa0 https://127.0.0.1:9443/ \xa0複製下來 \n \n 按\xa0 login\xa0 登入(密碼\xa0 admin \xa0) \n \n', 'tags': '', 'url': '9443.html'}, {'title': '上傳', 'text': '方法一 \n 先進到9443 \n git add . \n git commit -m "此更新的主旨" \n git push \n 輸入帳號(學號) \n 輸入密碼 \n 方法二 啟用 ssh \n git add . \n git commit -m "此更新的主旨" \n git push \n 兩者的差距是需不需要密碼，使用ssh就會比較方便，不用每次上傳都要打密碼 \n \n \xa0 \n', 'tags': '', 'url': '上傳.html'}, {'title': 'SSH', 'text': '點選資料夾  date  的  PuTTy \xa0 的\xa0 puttygen.exe \n \n 按下\xa0 Generate \n \n 接著把它複製下來 \n \n 然後開啟自己的  github  的  settings  按下\xa0 SSH and GPG keys \n \n 新增\xa0 New SSH key \n \n 把剛剛複製的貼上去後，按下\xa0 Add SSH key \n \n 以上設定好後按下\xa0 Save private key \n \n 打上檔案名稱 (要在後面打上\xa0 .ppk) \n \n 接著再開啟\xa0 date\xa0 的\xa0 PuTTy\xa0 的\xa0 putty.exe\xa0 \n \n 點選\xa0 github.com\xa0 並按下\xa0 Load \n \n 再去\xa0 Proxy\xa0 設定網路位置 \n \n 然後去\xa0 Auth\xa0 按\xa0 Browse\xa0 選取剛處存的檔案 \n \n 最後按下\xa0 Save\xa0 就完成了 \n \n 最後一個步驟去檢查\xa0 SSH\xa0 是否成功 \n \n \n', 'tags': '', 'url': 'SSH.html'}, {'title': '更新', 'text': '更新過後9443在寫內容時，可以不需要連網路 \n 先打\xa0 cd tmp \n 再來\xa0 cd wcm2021 \n 接著\xa0 cd cmsimde \n 最後\xa0 git pull origin master \n \n \xa0 \n', 'tags': '', 'url': '更新.html'}, {'title': 'Heroku', 'text': '先建立自己\xa0 Heroku\xa0 的帳號 ， 登入後建立第一個  app \n \n 下載  Heroku CLI\xa0 程式檔案，解壓縮至隨身碟裡面 \n \n 修改命令搜尋路徑，將  heroku.exe  設置在\xa0 date \n \n 把  stare_ivp6  拉進小白窗，複製進去 \n REM for heroku login set HTTP_PROXY=http://[2001:288:6004:17::53]:3128 set HTTPS_PROXY=http://[2001:288:6004:17::53]:3128 \n \n 然後重啟小黑窗 \n 先打\xa0 cd tmp \n 再來\xa0 cd wcm2021 \n 接著\xa0 heroku login -i \n 之後打上你的  heroku  帳後及密碼 \n 然後\xa0 heroku login -a a40923101 \xa0 (a40923101建立app的名稱) \n 最後\xa0 git push\xa0heroku \n \n', 'tags': '', 'url': 'Heroku.html'}, {'title': 'Heroku倉儲上傳', 'text': '因為不是連接學校網路，所以在heroku那兩行前面加上 REM \n \n 按下\xa0 Save \n \n 到小黑窗打 \n cd \xa0 tmp \n cd \xa0 wcm2021 \n git branch \n git push heroku \n \n', 'tags': '', 'url': 'Heroku倉儲上傳.html'}, {'title': '網路設置密碼', 'text': '先設定網路密碼 \n 開啟  PuTTY  的  putty.exe \n \n 打上網路設置的密碼和帳號 \n \n 然後去\xa0 Auth\xa0 按\xa0 Browse\xa0 選取之前處存的檔案 \n \n 在小黑窗打\xa0 regedit \n \n 會跳出登入編輯程式，電腦\\HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham按下匯出 \n \n 匯出在隨身碟的Date(名稱.reg)dsfsafd \n \n 然後打上   reg import y:\\w10s.reg \n \n 把\xa0 home_ipv6\xa0 的 . gitconfig  抓進小白窗修改\xa0 Proxy \n \n \n', 'tags': '', 'url': '網路設置密碼.html'}, {'title': 'RoboDK', 'text': '下載  robodk522_portable.7z  解壓縮 \n \n 按下\xa0 robodk522_portable  的  bin  開啟  RoboDK.exe \n \n 點取  examples  的  pick_and_place  選取所有檔案開啟機械手臂 \n \n 在小黑窗輸入  pip install robodk  (輸入時要關閉網路) \n \n 把  pick_and_place.py  拉進小白窗並按下  Go \n \n 接著機械手臂就會啟動 \n \n', 'tags': '', 'url': 'RoboDK.html'}, {'title': 'Fossil', 'text': '下載Fossil \n \n fossil解壓縮到y槽 \n \n 建立資料夾 \n mkdir fossil \n cd fossil \n 打上\xa0 fossil clone https://40923101@fossil.kmol.info/u/40923101 40923101.fossil \n 打上密碼，問你要不要記住密碼   y \n \n 查看fossil資料夾裡面有沒有\xa0 40923101.fossil \n \n 再次建立資料夾 \n mkdir wd \n cd\xa0wd \n mkdir 40923101 \n cd 40923101 \n 然後   fossil open ./../../40923101.fossil \n \n 查看40923101資料夾裡面有沒有\xa0 FOSSIL \n \n cd ..  退回wd \n git clone --recurse-submodules https://github.com/40923101/wcm2021.git \n \n 複製wcm2021裡的資料到40923101資料夾內 \n \n fossil add . \n \n fossil commit -m "inital add" \n 問要下載全部嗎  a \n \n 完成後就可以查看倉儲 https://fossil.kmol.info/u/40923101/doc/trunk/index.html \n \n \n', 'tags': '', 'url': 'Fossil.html'}, {'title': '分組專題', 'text': '', 'tags': '', 'url': '分組專題.html'}, {'title': '教室課表查詢', 'text': '先複製指令到小白窗，然後修改兩個想查詢的教室名稱 \n \n 接著另存\xa0 Save\xa0 下來 \n \n 存在隨身碟裡面的\xa0 downloads \n \n 然後按下\xa0 Go\xa0 啟動 \n \n 就會出現查詢的教室課表 \n \n \n', 'tags': '', 'url': '教室課表查詢.html'}, {'title': '期末項目', 'text': '', 'tags': '', 'url': '期末項目.html'}, {'title': '網路環境', 'text': '先檢查電腦有沒有連上網路 \n 如果還是無法上網去設定的網路和網際網路查看 \n 把手動Proxy設定開啟 \n 如在學校可看連接埠是69或是53 \n \n', 'tags': '', 'url': '網路環境.html'}, {'title': 'Heroku 網站', 'text': '先建立自己\xa0 Heroku\xa0 的帳號 ， 登入後建立第一個 \xa0 app \n \n 下載 \xa0 Heroku CLI\xa0 程式檔案，解壓縮至隨身碟裡面 \n \n 修改命令搜尋路徑，將 \xa0 heroku.exe \xa0 設置在\xa0 date \n \n 把 \xa0 stare_ivp6 \xa0 拉進小白窗，複製進去 \n REM for heroku login set HTTP_PROXY=http://[2001:288:6004:17::53]:3128 set HTTPS_PROXY=http://[2001:288:6004:17::53]:3128 \n \n 然後重啟小黑窗 \n 先打\xa0 cd tmp \n 再來\xa0 cd wcm2021 \n 接著\xa0 heroku login -i \n 之後打上你的 \xa0 heroku \xa0 帳後及密碼 \n 然後\xa0 heroku login -a a40923101 \xa0 (a40923101建立app的名稱) \n 最後\xa0 git push\xa0heroku \n \n Heroku倉儲上傳因為不是連接學校網路，所以在heroku那兩行前面加上 REM \n \n 按下\xa0 Save \n \n 到小黑窗打 \n cd \xa0 tmp \n cd \xa0 wcm2021 \n git branch \n git push heroku \n \n 就可以看到倉儲同步 \n \n \n \n', 'tags': '', 'url': 'Heroku 網站.html'}, {'title': '網路直播', 'text': '開啟 YouTube 直播功能查看右上方確認是否使用 Google 帳號登入。 \n 確認後請點選右上方 攝影機 按鈕，選取 進行直播 。 \n 如果是第一次使用直播功能，Youtube會先進行兩步驟的帳戶認證，完成認證後，需請等 24 小時啟用直播功能。 \n 若非第一次使用 Youtube 直播功能，或已完成認證並隔了 24 小時，請再次在 Youtube 首頁點選 攝影機 按鈕，選擇 進行直播 。 \n 欄位填寫說明完成後，送出後畫面上將出現 串流設定說明 ，請先停在此步驟，並開啟  OBS 。 \n 開啟 OBS 後，請點選 設定─串流 ，選取 YouTube/Youtube Gaming ，伺服器點選 Primary YouTube ingest sever ，並將剛才上圖 YouTube 提供的串流金鑰貼到  OBS  的串流金鑰欄位，完成後按下 套用 以及 確定 。 \n 注意事項 \n 第一次使用直播功能，需要進行兩步驟的帳戶認證，完成認證後，要再等 24 小時候才可以使用直播功能。 \n 如果要用手機開 YouTube 直播需要訂閱數1000人才可進行直播 \n \n \n 。 \n \n', 'tags': '', 'url': '網路直播.html'}, {'title': 'RoboDK 執行', 'text': '下載 \xa0 robodk522_portable.7z \xa0 解壓縮 \n \n 按下\xa0 robodk522_portable \xa0 的 \xa0 bin \xa0 開啟 \xa0 RoboDK.exe \n \n 點取 \xa0 examples \xa0 的 \xa0 pick_and_place \xa0 選取所有檔案開啟機械手臂 \n \n 在小黑窗輸入 \xa0 pip install robodk \xa0 (輸入時要關閉網路) \n \n 把 \xa0 pick_and_place.py \xa0 拉進小白窗並按下 \xa0 Go \n \n 接著機械手臂就會啟動 \n \n \n', 'tags': '', 'url': 'RoboDK 執行.html'}, {'title': '備忘錄', 'text': '打開倉儲  40923101.github.io/wcm2021 \n 螢幕錄影  Shift+Print Scr  選整個螢幕 \n 網路帳號  kmolab  密碼 \xa0kmolab週 \n 下載點  a.kmol.info:88 \n heroku倉儲 \xa0 http://a40923101.herokuapp.com \xa0 \n 利用Fossil來開啟倉儲 \xa0 https://fossil.kmol.info/u/40923101/doc/trunk/index.html \n Fossil網站\xa0 https://fossil.kmol.info/u/40923101', 'tags': '', 'url': '備忘錄.html'}]};